services:
  web:
    image: nginx:1.25-alpine
    volumes:
      - ./_docker/dev/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./runtime/logs/nginx:/var/log/nginx
    environment:
      - TZ=America/Sao_Paulo
    ports:
      - "80:80"
    depends_on:
      - app
    networks:
      - external
      - internal

  app:
    image: hyperf-skeleton
    build:
      context: .
      dockerfile: _docker/dev/swoole/Dockerfile
    volumes:
      - ./:/opt/www
    networks:
      - internal
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - TZ=America/Sao_Paulo
      - APP_ENV=dev
      - SCAN_CACHEABLE=false
      # Database
      - DB_DRIVER=pgsql
      - DB_HOST=pgsql
      - DB_PORT=5432
      - DB_DATABASE=app
      - DB_USERNAME=postgres
      - DB_PASSWORD=root
      - DB_CHARSET=utf8
      - DB_PREFIX=
      # Cache
      - REDIS_HOST=valkey
      - REDIS_AUTH=(null)
      - REDIS_PORT=6379
      - REDIS_DB=0
      # JWT
      - JWT_SECRET_KEY="token-secret"
      # Mail Host
      - MAIL_MAILER=smtp
      - MAIL_FROM_ADDRESS=hello@example.com
      - MAIL_FROM_NAME=Example
      - MAIL_HOST=mailpit
      - MAIL_PORT=1025
      # - SECRET="C94F7267B5D62787"


  pgsql:
    image: postgres:17.4-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      - ./_docker/dev/database/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql
      - ./_docker/dev/database/postgres.conf:/etc/postgresql.conf
    ports:
      - 5432:5432
    networks:
      - internal
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test:
        - CMD
        - pg_isready
        - "-q"
        - "-d"
        - "app"
        - "-U"
        - "postgres"
      retries: 3
      timeout: 5s

  mailpit:
    image: "axllent/mailpit:latest"
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - external
      - internal
    # deploy:
    #     resources:
    #         limits:
    #             cpus: '0.5'
    #             memory: '0.256GB'


volumes:
  database_data:

networks:
  internal:
    driver: bridge
  external:
    driver: bridge
